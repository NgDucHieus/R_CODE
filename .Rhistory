...names(count_table[8])
count_table[99]
count_table[11]
# In ra giá trị và vị trí của nó
cat("Giá trị lớn nhất:", max_count, "tại vị trí:", count_table[i, "\n")
# In ra giá trị và vị trí của nó
cat("Giá trị lớn nhất:", max_count, "tại vị trí:", count_table[i], "\n")
count_table <- table(faithful$eruptions)
max_count <- max(count_table)
for (i in 1:length(count_table)) {
if (count_table[i] == max_count) {
cat( max_count,  count_table[i], "\n")
}
}
position<-which(count_table ==max(count_table))
position
count_table
position
max_count
count_table[11]
count_table[99]
length(count_table)
length(faithful)
length(faithful$eruptions)
sqrt(272)
hist(faithful$eruptions,breaks = 16)
hist(faithful$eruptions,breaks = 20)
hist(faithful$eruptions,breaks = 20)
hist(faithful$eruptions,breaks = 8)
hist(faithful$eruptions,breaks = 272)
var(faithful$waiting)
var(faithful$eruptions)
install.packages("e1071",dep=TRUE)
library(e1071)
skewness(v)
skewness(faithful$waiting)
kurtosis(v)
kurtosis(faithful$waiting)
rnorm(1e6)->test
test
hist(test)
kurtosis(test)
rbinom(1e6,5)
rbinom(1e6,5,0.5)-<test2
rbinom(1e6,5,0.5)->test2
library(MASS)
df <-faithful
df
erupt<-df$eruptions
mean(erupt)
dis<-(erupt-u)^2
u<-mean(erupt)
dis<-(erupt-u)^2
dis
sum(dis)
sum(dis)/len(erupt)
sum(dis)/length(erupt)
SD <-(sum((erupt-mean(erupt))^2)/length(erupt))
SD
hist(erupt)
hist(erupt,breaks = 20)
hist(erupt,breaks = 30)
hist(erupt,breaks = 40)
hist(erupt,breaks = 40)
hist(erupt,breaks = 20)
count_table <- table(faithful$eruptions)
max_count <-max(count_table)
position<-which(count_table ==max(count_table))
position
hist(erupt,breaks = 10)
hist(erupt,breaks = 20)
hist(erupt,breaks =
hist(erupt,breaks = 8)
hist(erupt,breaks =4)
hist(erupt,breaks =1)
hist(erupt,breaks = 10)
mean(erupt)
sd(erupt)
# Create a plot with some points
plot(1:10, 1:10, main="Scatterplot with a Line", sub="This is the sub-title",
xlab="X Axis Label", ylab="Y Axis Label", pch=19, col="blue")
# Add a line to the plot
abline(h = 5, col = "red")
# Add a line to the plot
axline(h = 5, col = "red")
# Add a line to the plot
ahline(h = 5, col = "red")
# Add a line to the plot
ahline(v = 5, col = "red")
# Add a line to the plot
ahline(v = 5, col = "red")
# Add a line to the plot
abline(v = 5, col = "red")
# Add a line to the plot
abline(v = 5, col = "red")
# Add a line to the plot
aline(v = 5, col = "red")
# Add a line to the plot
abline(v = 5, col = "red")
hist(erupt,breaks = 10)
hist(erupt,breaks = 20)
abline(v=mean(erupt)-sd(erupt),col = "red",lty =2)
abline(v=mean(erupt)+sd(erupt),col = "red",ltu =2)
abline(v=mean(erupt)+sd(erupt),col = "red",lty =2)
abline(v=mean(erupt)-sd(erupt),col = "red",lty =2)
abline(v=mean(erupt)+sd(erupt),col = "red",lty =2)
hist(erupt,breaks = 40)
abline(v=mean(erupt)-sd(erupt),col = "red",lty =2)
abline(v=mean(erupt)+sd(erupt),col = "red",lty =2)
hist(erupt,breaks = 100)
abline(v=mean(erupt)-sd(erupt),col = "red",lty =2)
abline(v=mean(erupt)+sd(erupt),col = "red",lty =2)
hist(erupt,breaks = 1000)
abline(v=mean(erupt)-sd(erupt),col = "red",lty =2)
abline(v=mean(erupt)+sd(erupt),col = "red",lty =2)
abline(v=mean(erupt)-sd(erupt),col = "red",lty =2)
abline(v=mean(erupt)+sd(erupt),col = "red",lty =2)
abline(v=mean(erupt)-sd(erupt),col = "red")
abline(v=mean(erupt)+sd(erupt),col = "red")
abline(v = mean(erupt),col="red")
hist(erupt,breaks = 2000)
abline(v=mean(erupt)-sd(erupt),col = "red")
abline(v=mean(erupt)+sd(erupt),col = "red")
abline(v = mean(erupt),col="red")
count_table[11]
hist(erupt,breaks = 1000)
hist(erupt,breaks = 1000)
abline(v=mean(erupt)-sd(erupt),col = "red")
abline(v=mean(erupt)+sd(erupt),col = "red")
abline(v = mean(erupt),col="red")
hist(erupt,breaks = 100)
abline(v=mean(erupt)-sd(erupt),col = "red")
abline(v=mean(erupt)+sd(erupt),col = "red")
hist(erupt,breaks = 300)
abline(v=mean(erupt)-sd(erupt),col = "red")
abline(v=mean(erupt)+sd(erupt),col = "red")
source("C:/Users/Admin/Desktop/SXTK/Input/standard_devitation.R", echo=TRUE)
hist(erupt,breaks = 200)
abline(v=mean(erupt)-sd(erupt),col = "red")
abline(v=mean(erupt)+sd(erupt),col = "red")
abline(v = mean(erupt),col="red")
hist(erupt,breaks = 300)
abline(v=mean(erupt)-sd(erupt),col = "red")
abline(v=mean(erupt)+sd(erupt),col = "red")
abline(v = mean(erupt),col="red")
wait <-df$waiting
wait
mean(wait)
sd(wait)
#chebysev
abline(v=mean(erupt)-2*sd(erupt),col='blue')
#chebysev
abline(v=mean(erupt)-2*sd(erupt),col='blue')
SD <-(sum((erupt-mean(erupt))^2)/length(erupt))
SD
hist(erupt,breaks = 300)
abline(v=mean(erupt)-sd(erupt),col = "red")
abline(v=mean(erupt)+sd(erupt),col = "red")
abline(v = mean(erupt),col="red")
#chebysev
abline(v=mean(erupt)-2*sd(erupt),col='blue')
mean(erupt)
hist(erupt,breaks = 300)
abline(v=mean(erupt)-sd(erupt),col = "red")
abline(v=mean(erupt)+sd(erupt),col = "red")
abline(v = mean(erupt),col="red")
#chebysev
abline(v=mean(erupt)-2*sd(erupt),col='blue')
#chebysev
down <-mean(erupt)-2*sd(erupt)
down
#chebysev
down <-(mean(erupt)-2*sd(erupt))
down
sd(erupt)
hist(erupt,breaks = 1000)
hist(erupt,breaks = 10000)
hist(erupt,breaks = 100000)
hist(erupt,breaks = 1000000)
hist(erupt,breaks = 10000)
hist(erupt,breaks = 1000)
hist(erupt,breaks = 100)
abline(v=mean(erupt)-sd(erupt),col = "red")
abline(v=mean(erupt)+sd(erupt),col = "red")
abline(v = mean(erupt),col="red")
#chebysev
down <-(mean(erupt)-2*sd(erupt))
SD <-(sum((erupt-mean(erupt))^2)/length(erupt))
SD
hist(erupt,breaks = 100)
abline(v=mean(erupt)-sd(erupt),col = "red")
abline(v=mean(erupt)+sd(erupt),col = "red")
hist(erupt,breaks = 100)
abline(v=mean(erupt)-sd(erupt),col = "red")
abline(v=mean(erupt)+sd(erupt),col = "red")
abline(v = mean(erupt),col="red")
hist(erupt,breaks = 1000)
abline(v=mean(erupt)-sd(erupt),col = "red")
abline(v=mean(erupt)+sd(erupt),col = "red")
abline(v = mean(erupt),col="red")
#chebysev
abline(v= mean(erupt)-2*sd(erupt),col = 'blue')
down
hist(erupt,breaks = 1000,freq = TRUE)
hist(erupt,breaks = 100,freq = TRUE)
hist(erupt,breaks = 300,freq = TRUE)
abline(v=mean(erupt)-sd(erupt),col = "red")
abline(v=mean(erupt)+sd(erupt),col = "red")
abline(v = mean(erupt),col="red")
#chebysev
abline(v= mean(erupt)-2*sd(erupt),col = 'blue')
hist(erupt,breaks = 300,xlim =c(1,max(erupt)))
hist(erupt,breaks = 300,xlim =c(1,6)
hist(erupt,breaks = 300,xlim =c(1,6))
hist(erupt,breaks = 300,xlim =c(1,6))
abline(v=mean(erupt)-sd(erupt),col = "red")
abline(v=mean(erupt)+sd(erupt),col = "red")
abline(v = mean(erupt),col="red")
hist(erupt,breaks = 300,xlim =c(1,5.5))
abline(v=mean(erupt)-sd(erupt),col = "red")
abline(v=mean(erupt)+sd(erupt),col = "red")
abline(v = mean(erupt),col="red")
hist(erupt,breaks = 1000,xlim =c(1,5.5))
abline(v=mean(erupt)-sd(erupt),col = "red")
abline(v=mean(erupt)+sd(erupt),col = "red")
abline(v = mean(erupt),col="red")
hist(erupt,breaks = 1000,xlim =c(1,5.5))
abline(v=mean(erupt)-sd(erupt),col = "red")
abline(v=mean(erupt)+sd(erupt),col = "red")
abline(v = mean(erupt),col="red")
#chebysev
abline(v= mean(erupt)-2*sd(erupt),col = 'blue')
hist(erupt,breaks = 1000,xlim =c(1.4,5.5))
abline(v=mean(erupt)-sd(erupt),col = "red")
abline(v=mean(erupt)+sd(erupt),col = "red")
abline(v = mean(erupt),col="red")
#chebysev
abline(v= mean(erupt)-2*sd(erupt),col = 'blue')
down <-(mean(erupt)-2*sd(erupt))
hist(erupt,breaks = 1000,xlim =c(1.3,5.5))
abline(v=mean(erupt)-sd(erupt),col = "red")
abline(v=mean(erupt)+sd(erupt),col = "red")
abline(v = mean(erupt),col="red")
#chebysev
abline(v= mean(erupt)-2*sd(erupt),col = 'blue')
hist(erupt,breaks = 1000,xlim =c(1,5.5))
abline(v=mean(erupt)-sd(erupt),col = "red")
abline(v=mean(erupt)+sd(erupt),col = "red")
abline(v = mean(erupt),col="red")
#chebysev
abline(v= mean(erupt)-2*sd(erupt),col = 'blue')
down <-(mean(erupt)-2*sd(erupt))
abline(v=mean(erupt)+2*sd(erupt),col='blue')
abline(v=mean(erupt)+2*sd(erupt),col='blue')
hist(erupt,breaks = 1000,xlim =c(1,5.6))
abline(v=mean(erupt)-sd(erupt),col = "red")
abline(v=mean(erupt)+sd(erupt),col = "red")
abline(v = mean(erupt),col="red")
#chebysev
abline(v= mean(erupt)-2*sd(erupt),col = 'blue')
abline(v=mean(erupt)+2*sd(erupt),col='blue')
wait<-df$waiting
plot(wait, erupt, xlab = "X-axis Label", ylab = "Y-axis Label", pch = 16, col = "blue")
lines(wait, erupt, type = "l", col = "red")
# Create a data frame
data <- data.frame(x = wait, y = erupt)
# Fit a linear model
model <- lm(y ~ x, data = data)
# Print summary of the model
summary(model)
# Plot the points
plot(x, y, main = "Linear Regression", xlab = "X-axis Label", ylab = "Y-axis Label", pch = 16, col = "blue")
# Add the regression line to the plot
abline(model, col = "red")
# Plot the points
plot(wait, erupt, main = "Linear Regression", xlab = "X-axis Label", ylab = "Y-axis Label", pch = 16, col = "blue")
# Add the regression line to the plot
abline(model, col = "red")
# Plot the points
plot(wait, erupt, main = "Linear Regression", xlab = "X-axis Label", ylab = "Y-axis Label", pch = 16, col = "blue",break = 100)
hist(erupt,breaks = 1000,xlim =c(1,5.6))
abline(v=mean(erupt)-sd(erupt),col = "red")
abline(v=mean(erupt)+sd(erupt),col = "red")
abline(v = mean(erupt),col="red")
hist(erupt,breaks = 10,xlim =c(1,5.6))
hist(erupt,breaks = 20,xlim =c(1,5.6))
position<-which(count_table ==max(count_table))
position
var(faithful$eruptions)
(1.867+4.5 )/2
# Kiểm tra định lý Chebyshev cho k = 2
k <- 2
observed_limit <- sum(abs(rnorm(1000)) >= k) / 1000
theoretical_limit <- chebyshev_limit(k)
cat("Giới hạn quan sát theo dữ liệu:", observed_limit, "\n")
cat("Giới hạn lý thuyết từ định lý Chebyshev:", theoretical_limit, "\n")
observed_limit <- sum(abs(rnorm(1000)) >= k) / 1000
theoretical_limit <- chebyshev_limit(k)
# Tính giới hạn theo định lý Chebyshev
chebyshev_limit <- function(k) {
return(1 - 1/k^2)
}
# Kiểm tra định lý Chebyshev cho k = 2
k <- 2
observed_limit <- sum(abs(rnorm(1000)) >= k) / 1000
theoretical_limit <- chebyshev_limit(k)
cat("Giới hạn quan sát theo dữ liệu:", observed_limit, "\n")
cat("Giới hạn lý thuyết từ định lý Chebyshev:", theoretical_limit, "\n")
# Tính giới hạn theo định lý Chebyshev
chebyshev_limit <- function(k) {
return(1 - 1/k^2)
}
# Kiểm tra định lý Chebyshev cho k = 2
k <- 2
observed_limit <- mean(abs(rnorm(1000)) >= k)
theoretical_limit <- chebyshev_limit(k)
cat("Giới hạn quan sát theo dữ liệu:", observed_limit, "\n")
cat("Giới hạn lý thuyết từ định lý Chebyshev:", theoretical_limit, "\n")
count_table <-table(math)
position<-which(count_table ==max(count_table))
data<-read.csv("diem_thi_thpt_2023.csv")
data
hist(math,breaks = 100,col = "blue")
position
data<-read.csv("diem_thi_thpt_2023.csv")
data
hist(math,breaks = 100,col = "blue")
math<-data$toan
hist(math,breaks = 100,col = "blue")
median(math)
barplot(math)
ncount_table <-table(math)
position<-which(ncount_table ==max(ncount_table))
position
max(ncount_table)
sd(math)
s<-sd(math)
s
by = 0.2
cut <-(math,break=seq(0,10,by = by))
by <_ 0.2
by <- 0.2
cut <-(math,break=seq(0,10,by = by))
cut <-math(break=seq(0,10,by = by))
cut <-cut(math,break=seq(0,10,by = by))
cut <-cut(math,break=seq(0,10,by = by))
hist(math,breaks = seq(0,10,by = 0.2),col = "blue",freq = F)
lines(density(math,na.rm = T,adjust = 2),lwd=3,col="red")
lines(density(math,na.rm = T,adjust = 3),lwd=3,col="red")
lines(density(math,na.rm = T,adjust = 4),lwd=3,col="red")
lines(density(math,na.rm = T,adjust = 5),lwd=3,col="red")
lines(density(math,na.rm = T,adjust = 10),lwd=3,col="red")
lines(density(math,na.rm = T,adjust = 1),lwd=3,col="red")
lines(density(math,na.rm = T,adjust = 2),lwd=3,col="red")
hist(math,breaks = seq(0,10,by = 0.2),col = "blue",freq = F)
lines(density(math,na.rm = T,adjust = 2),lwd=3,col="red")
math <-cut (math,break=seq(0,10,by = by))
math <-cut (math,breaks=seq(0,10,by = by))
hist(math,breaks = seq(0,10,by = 0.2),col = "blue",freq = F)
math
math<-data$toan
math
math<-na.omit(math)
math
median(math)
hist(math,breaks = seq(0,10,by = 0.2),col = "blue")
abline(v= 6.6,col='red')
abline(v=sd(math),col = "red")
abline(v=mean(math),col="red")
abline(v=mean(math),col="black")
abline(v=mean(math),col="green")
abline(v=mean(math),col="orange")
abline(v= 6.6,col='red')
abline(v=mean(math),col="orange")
abline(v= 6.6,col='red')
abline(v=mean(math),col="orange")
hist(math,breaks = seq(0,10,by = 0.2),col = "blue")
abline(v= 6.6,col='red')
abline(v=mean(math),col="orange")
abline(v=mean(math),col="orange")
A00<-sum(data$toan+data$vat_li+data$hoa_hoc)
A00
A00<-sum(data$toan+data$vat_li+data$hoa_hoc)
A00
data
A00<-data[data$toan!=NA]
A00<-data[data$toan!='NA']
A00
A00 <- subset(data, !is.na(toan)&!is.na(vat ly))
A00
A00 <- data[data$toan != 'NA', ]
A00
A00 <- data[data$toan != 'NA',data$vat_li != 'NA',data$hoa_hoc != 'NA',]
A00 <- data[!is.na(data$toan) & !is.na(data$vat_li) & !is.na(data$hoa_hoc), ]
A00
sum(A00$toan+A00$hoa_hoc+A00$vat_li)
b<-sum(A00$toan+A00$hoa_hoc+A00$vat_li)
b
A00$toan
A00$toan[0]
toan<-A00$toan
toan[0]
toan[1]
merged_data <- merge(merge(data$toan, data$vat_li), data$hoa_hoc)
merged_data <- merge(merge(data$toan, data$vat_li), data$hoa_hoc)
merged_data <- merge(merge(A00$toan, A00$vat_li), A00$hoa_hoc)
A00 <- data[!is.na(data$toan) & !is.na(data$vat_li) & !is.na(data$hoa_hoc), ]
merged_data <- merge(merge(A00$toan, A00$vat_li), A00$hoa_hoc)
gc()
A00 <- data[!is.na(data$toan) & !is.na(data$vat_li) & !is.na(data$hoa_hoc), ]
length(A00$toan)
merged_data <- merge(merge(A00$toan, A00$vat_li), A00$hoa_hoc)
A00
A00$toan+A00$vat_li+A00$hoa_hoc
SUMA00<-(A00$toan+A00$vat_li+A00$hoa_hoc)
barplot(SUMA00)
hist(SUMA00)
hist(SUMA00,breaks = 100)
A00 <- data[!is.na(data$toan) & !is.na(data$vat_li), ]
A00 <- data[!is.na(data$toan) & !is.na(data$vat_li) & !is.na(data$hoa_hoc), ]
SUMA00<-(A00$toan+A00$vat_li+A00$hoa_hoc)
barplot(SUMA00)
hist(SUMA00,breaks = 100,freq = F)
line(SUMA00)
line(density(SUMA00))
line(density(SUMA00),col='red')
line(density(SUMA00),lwd = 2,col='red')
hist(SUMA00,breaks = 100,freq = F)
line(density(SUMA00),lwd = 2,col='red')
plot(density(SUMA00),lwd = 2,col='red')
hist(SUMA00,breaks = 100,freq = F)
plot(density(SUMA00),lwd = 2,col='red')
lines(density(SUMA00),lwd =2 ,col='red')
hist(SUMA00,breaks = 100,freq = F)
lines(density(SUMA00),lwd =2 ,col='red')
skews?
A00 <- data[!is.na(data$toan) & !is.na(data$vat_li) & !is.na(data$hoa_hoc)&(data$ma_ngoai_ngu["N1"]) ]
A00 <- data[!is.na(data$toan) & !is.na(data$vat_li) & !is.na(data$hoa_hoc)& (data$ma_ngoai_ngu==N1) ]
A00 <- data[!is.na(data$toan) & !is.na(data$vat_li) & !is.na(data$hoa_hoc)& (data$ma_ngoai_ngu=='N1') ]
A00 <- data[!is.na(data$toan) & !is.na(data$vat_li) & !is.na(data$hoa_hoc)& (data$ma_ngoai_ngu=='N1'), ]
A00
A00$ngoai_ngu
A00 <- data[!is.na(data$toan) & !is.na(data$vat_li) & !is.na(data$hoa_hoc), ]
SUMA00<-(A00$toan+A00$vat_li+A00$hoa_hoc)
barplot(SUMA00)
hist(SUMA00,breaks = 100,freq = F)
plot(density(SUMA00),lwd = 2,col='red')
lines(density(SUMA00),lwd =2 ,col='red')
plot(density(SUMA00),lwd = 2,col='red')
hist(SUMA00,breaks = 100,freq = F)
lines(density(SUMA00),lwd =2 ,col='red')
A00
A00
barplot(SUMA00)
hist(SUMA00,breaks = 100,freq = F)
lines(density(SUMA00),lwd =2 ,col='red')
A00 <- data[!is.na(data$toan) & !is.na(data$vat_li) & !is.na(data$gdcd),]
SUMA00<-(A00$toan+A00$vat_li+A00$gdcd)
hist(SUMA00,breaks = 100,freq = F)
A00
SUMA00
data$gdcd
A00
A00 <- data[!is.na(data$toan) & !is.na(data$ngu_van) & !is.na(data$gdcd),]
SUMA00<-(A00$toan+A00$ngu_van+A00$gdcd)
SUMA00
hist(SUMA00,breaks = 100,freq = F)
lines(density(SUMA00),lwd =2 ,col='red')
nn<-data$ma_ngoai_ngu =="N1"
nn
mean<-sum(SUMA00)/length(SUMA00)
mean
mean(SUMA00)
var <-(SUMA00-mean)^2/length(SUMA00)
var
var <-sum((SUMA00-mean)^2)/length(SUMA00)
var
var(SUMA00)
median(SUMA00)
length(SUMA00)
564516/2
564516
564516%2
564516mod 2
564516 mod 2
564516 %/% 2
564516 %%2
sqrt(var(DATA))
DATA <- (95,106,106,118,188)
sqrt(var(DATA))
DATA <- c(95,106,106,118,188)
sqrt(var(DATA))
H1_BCSE <- c(172,181,171,170,174,177,178,165,169,168,171,180,170,172,170,178,163,169,170,175,170,176,176)
H2_BJS <- c(160,175,157,153,175,160,155,163,173,165,156,155,162,162,163,168,162,163,157,159,158,173,158,163,167,168,165,169,149,163)
H <- c(H1_BCSE, H2_BJS)
sd(H)
H1_BCSE <- c(172,181,171,170,174,177,178,165,169,168,171,180,170,172,170,178,163,169,170,175,170,176,176)
sd(H1)
sd(H1_BCSE)
H1_BCSE <- c(172,181,171,170,174,177,178,165,169,168,171,180,170,172,170,178,163,169,170,175,170,176,176)
sd(H1_BCSE)
mean(H1_BCSE)
p_value <-2*pnorm(mean(H1_BCSE),mean=170,sd =(H1_BCSE)/sqrt(length((H1_BCSE)),lower.tail = F))
p <- 2*pnorm(mean(H1_BCSE), mean = 170, sd = sd(H1_BCSE)/sqrt(length(H1_BCSE)), lower.tail = F)
p
z = (9900-10000)/(120/sqrt(30))
norm(z)
z.alpha = qnorm(alpha)
alpha = 0.05
z.alpha = qnorm(alpha)
z.alpha
source("C:/Users/Admin/Desktop/SXTK/Input/read_data.R")
